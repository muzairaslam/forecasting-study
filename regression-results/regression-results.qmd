---
title: "Regression Analysis"
format: html
---

```{r}
library("tidyverse")
library("fpp3")
library("here")
library("gt")
library("gtsummary")
library("car")
options(scipen = 10)  # Temporarily increase penalty for scientific notation
set.seed(1)         # for reproduciblity
```

```{r}
data <- read_csv(here("data/data-consolidated-2.csv"))
```


```{r}
# Year = Index
data_arranged <- data |>
    rename(
        no = `Serial No`,
        fis_yr = `Fiscal Year`,
        nit_vol_k_ton = `Nitrogen Volume (N K tonnes)`,
        nit_price_per_ton = `Nitrogen Price (per tonne)`,
        water_maf = `Water Availability (MAF)`,
        cr_area_mn_hec = `Cropped Area (million hectares)`,
        agric_gdp_rs_bn = `Agricultural GDP (Rs in billions)`,
        agric_gdp_usd_bn_cy = `Agricultural GDP (current BN US$) C-Y`,
        credit_dis_rs_mn = `Total Credit Disbursed (Rs million)`,
        inp_out_ratio = `Input Output Ratio`,
        n_p_ratio = `N / P`,
        agric_employment = `Agriculture Employment (Mns)`,
        pkr_per_usd = `PKR-USD`
    ) |>
    mutate(
        lag_agric_gdp_usd_bn_cy = lag(agric_gdp_usd_bn_cy),
        tech_proxy = (agric_gdp_rs_bn/cr_area_mn_hec)/(cr_area_mn_hec/agric_employment),
        lg_nit_vol_k_ton = log(nit_vol_k_ton),
        lg_nit_price_per_ton = log(nit_price_per_ton),
        lg_water_maf = log(water_maf),
        lg_cr_area_mn_hec = log(cr_area_mn_hec),
        lg_agric_gdp_rs_bn = log(agric_gdp_rs_bn),
        lg_agric_gdp_usd_bn_cy = log(agric_gdp_usd_bn_cy),  
        lag_lg_agric_gdp_usd_bn_cy = log(lag_agric_gdp_usd_bn_cy),
        lg_credit_dis_rs_mn = log(credit_dis_rs_mn),
        lg_inp_out_ratio = log(inp_out_ratio),
        lg_n_p_ratio = log(inp_out_ratio),
        lg_tech_proxy = log(tech_proxy)
    ) |> 
    slice_tail(n = 29)

data_arranged$fis_yr <- as.integer(data_arranged$fis_yr)
data_arranged$no <- as.integer(data_arranged$no)
data_arranged$nit_vol_k_ton <- as.integer(data_arranged$nit_vol_k_ton)

data_tsibble <- data_arranged |> 
    as_tsibble(index = fis_yr)
```

### Median and Standard Deviation of Variables

```{r}
med_price_nit <- median(data_tsibble$nit_price_per_ton)
std_price_nit <- sd(data_tsibble$nit_price_per_ton)

med_vol_nit <- median(data_tsibble$nit_vol_k_ton)
std_vol_nit <- sd(data_tsibble$nit_vol_k_ton)

med_water_maf <- median(data_tsibble$water_maf)
std_water_maf <- sd(data_tsibble$water_maf)

med_cr_area_mn_hec <- median(data_tsibble$cr_area_mn_hec)
std_cr_area_mn_hec <- sd(data_tsibble$cr_area_mn_hec)

med_lag_agric_gdp <- median(data_tsibble$lag_agric_gdp_usd_bn_cy)
std_lag_agric_gdp <- sd(data_tsibble$lag_agric_gdp_usd_bn_cy)

med_credit_dis <- median(data_tsibble$credit_dis_rs_mn)
std_credit_dis <- sd(data_tsibble$credit_dis_rs_mn)

med_tech_proxy <- median(data_tsibble$tech_proxy)
std_tech_proxy <- sd(data_tsibble$tech_proxy)

med_np_ratio <- median(data_tsibble$n_p_ratio)
std_np_ratio <- sd(data_tsibble$n_p_ratio)

med_input_output_ratio <- median(data_tsibble$inp_out_ratio)
std_input_output_ratio <- sd(data_tsibble$inp_out_ratio)

# Compute medians and standard deviations for log-transformed variables
med_lg_nit_vol_k_ton <- median(data_tsibble$lg_nit_vol_k_ton)
std_lg_nit_vol_k_ton <- sd(data_tsibble$lg_nit_vol_k_ton)

med_lg_nit_price_per_ton <- median(data_tsibble$lg_nit_price_per_ton)
std_lg_nit_price_per_ton <- sd(data_tsibble$lg_nit_price_per_ton)

med_lg_water_maf <- median(data_tsibble$lg_water_maf)
std_lg_water_maf <- sd(data_tsibble$lg_water_maf)

med_lg_cr_area_mn_hec <- median(data_tsibble$lg_cr_area_mn_hec)
std_lg_cr_area_mn_hec <- sd(data_tsibble$lg_cr_area_mn_hec)

med_lag_lg_agric_gdp_usd_bn_cy <- median(data_tsibble$lag_lg_agric_gdp_usd_bn_cy)
std_lag_lg_agric_gdp_usd_bn_cy <- sd(data_tsibble$lag_lg_agric_gdp_usd_bn_cy)

med_lg_credit_dis_rs_mn <- median(data_tsibble$lg_credit_dis_rs_mn)
std_lg_credit_dis_rs_mn <- sd(data_tsibble$lg_credit_dis_rs_mn)

med_lg_inp_out_ratio <- median(data_tsibble$lg_inp_out_ratio)
std_lg_inp_out_ratio <- sd(data_tsibble$lg_inp_out_ratio)

med_lg_n_p_ratio <- median(data_tsibble$lg_n_p_ratio)
std_lg_n_p_ratio <- sd(data_tsibble$lg_n_p_ratio)

med_lg_tech_proxy <- median(data_tsibble$lg_tech_proxy)
std_lg_tech_proxy <- sd(data_tsibble$lg_tech_proxy)

# Combine the results into a data frame
summary_stats <- data.frame(
  variable = c(
    "nit_price_per_ton", "nit_vol_k_ton", "water_maf", "cr_area_mn_hec",
    "lag_agric_gdp_usd_bn_cy", "credit_dis_rs_mn", "tech_proxy", "n_p_ratio",
    "input_output_ratio", "lg_nit_vol_k_ton", "lg_nit_price_per_ton",
    "lg_water_maf", "lg_cr_area_mn_hec", "lag_lg_agric_gdp_usd_bn_cy",
    "lg_credit_dis_rs_mn", "lg_inp_out_ratio", "lg_n_p_ratio", "lg_tech_proxy"
  ),
  median = c(
    med_price_nit, med_vol_nit, med_water_maf, med_cr_area_mn_hec,
    med_lag_agric_gdp, med_credit_dis, med_tech_proxy, med_np_ratio,
    med_input_output_ratio, med_lg_nit_vol_k_ton, med_lg_nit_price_per_ton,
    med_lg_water_maf, med_lg_cr_area_mn_hec, med_lag_lg_agric_gdp_usd_bn_cy,
    med_lg_credit_dis_rs_mn, med_lg_inp_out_ratio, med_lg_n_p_ratio, med_lg_tech_proxy
  ),
  std_dev = c(
    std_price_nit, std_vol_nit, std_water_maf, std_cr_area_mn_hec,
    std_lag_agric_gdp, std_credit_dis, std_tech_proxy, std_np_ratio,
    std_input_output_ratio, std_lg_nit_vol_k_ton, std_lg_nit_price_per_ton,
    std_lg_water_maf, std_lg_cr_area_mn_hec, std_lag_lg_agric_gdp_usd_bn_cy,
    std_lg_credit_dis_rs_mn, std_lg_inp_out_ratio, std_lg_n_p_ratio, std_lg_tech_proxy
  )
)

# Print the summary statistics data frame
print(summary_stats)

```
### Variables

y = Nitrogen Volume K Ton

x1 = Price of Nitrogen
x2 = Water Avaialability
x3 = Cropped Accreage
x4 = Lag Agric GDP Bn USD
x5 = Agric Credit
x6 = Tech Proxy
x7 = Input Output Ratio
x8 = N/P Ratio


### F Statistics

```{r}

```


### Correlation Table 

#### Nominal Variables

```{r}
# Normal Variables

nom_vars <- data_tsibble |>
    select(
        nit_price_per_ton ,
        water_maf,
        cr_area_mn_hec,
        lag_agric_gdp_usd_bn_cy,
        credit_dis_rs_mn ,
        tech_proxy,
        inp_out_ratio ,
        n_p_ratio
    )

nom_vars <- nom_vars[, -ncol(nom_vars)]

# Calculate the correlation matrix
correlation_matrix <- cor(nom_vars, use = "pairwise.complete.obs")

# Convert the correlation matrix to a data frame
correlation_df <- as.data.frame(as.table(correlation_matrix))

# Rename the columns for clarity

# make the table wide
correlation_wide <- correlation_df |>
  pivot_wider(names_from = Var2, values_from = Freq)

# Create the correlation table using gt
# Create the correlation table using gt
correlation_table <- correlation_wide %>%
  gt() %>%
  tab_header(
    title = "Correlation Matrix",
    subtitle = "Correlation coefficients for the variables"
  ) |>
  fmt_number(
    decimals = 2
  ) |>
  tab_style(
    style = list(
      cell_fill(color = "lightgrey"),
      cell_text(weight = "bold")
    ),
    locations = cells_title(groups = c("title", "subtitle"))
  ) |>
  tab_options(
    table.font.size = 12,
    column_labels.font.size = 14,
    heading.align = "center",
    table.align = "center",
    table.border.top.color = "black",
    table.border.bottom.color = "black",
    table.border.top.width = px(2),
    table.border.bottom.width = px(2)
  ) |>
  data_color(
    columns = vars(-Var1),
    colors = scales::col_bin(
      bins = c(-Inf, -0.75, 0.75, Inf),
      palette = c("red", "white", "white", "#FFCCCB")
    )
  )

# Print the correlation table
print(correlation_table)


gtsave(correlation_table, "tables/correlation_table-nominal.docx")
```


#### Log Transformed Variables

```{r}
# Select the log-transformed variables
log_vars <- data_tsibble |>
  select(
    lg_nit_price_per_ton,
    lg_water_maf,
    lg_cr_area_mn_hec,
    lag_lg_agric_gdp_usd_bn_cy,
    lg_credit_dis_rs_mn,
    lg_tech_proxy,
    lg_inp_out_ratio,
    lg_n_p_ratio
  )

log_vars <- log_vars[, -ncol(log_vars)]

# Calculate the correlation matrix for log-transformed variables
log_correlation_matrix <- cor(log_vars, use = "pairwise.complete.obs")

# Convert the correlation matrix to a data frame
log_correlation_df <- as.data.frame(as.table(log_correlation_matrix))

# Rename the columns for clarity
log_correlation_df <- log_correlation_df |>
  rename(
    Var1 = Var1,
    Var2 = Var2,
    Correlation = Freq
  )

# Make the table wide
log_correlation_wide <- log_correlation_df |>
  pivot_wider(names_from = Var2, values_from = Correlation)

# Create the correlation table using gt
log_correlation_table <- log_correlation_wide |>
  gt() |>
  tab_header(
    title = "Correlation Matrix (Log-Transformed Variables)",
    subtitle = "Correlation coefficients for the log-transformed variables"
  ) |>
  fmt_number(
    columns = vars(-Var1),
    decimals = 2
  ) |>
  tab_style(
    style = list(
      cell_fill(color = "lightgrey"),
      cell_text(weight = "bold")
    ),
    locations = cells_title(groups = c("title", "subtitle"))
  ) |>
  tab_options(
    table.font.size = 12,
    column_labels.font.size = 14,
    heading.align = "center",
    table.align = "center",
    table.border.top.color = "black",
    table.border.bottom.color = "black",
    table.border.top.width = px(2),
    table.border.bottom.width = px(2)
  ) |>
  data_color(
    columns = vars(-Var1),
    colors = scales::col_bin(
      bins = c(-Inf, -0.75, 0.75, Inf),
      palette = c("red", "white", "white", "#FFCCCB")
    )
  )

# Print the table
print(log_correlation_table)


gtsave(log_correlation_table, "tables/correlation_table-log-transformed.docx")
```

### 6 Vars Model

```{r}
six_vars_model <- lm(
    nit_vol_k_ton ~ nit_price_per_ton + 
                    water_maf + 
                    cr_area_mn_hec +
                    lag_agric_gdp_usd_bn_cy +
                    credit_dis_rs_mn +
                    tech_proxy,
                    data = data_tsibble
        )

summary(six_vars_model) 

# Calculating VIF
vif_values <- vif(six_vars_model)
vif_values
```

### 6 Vars Log Model

```{r}
six_vars_log_model <- lm(
    lg_nit_vol_k_ton ~ lg_nit_price_per_ton + 
                        lg_water_maf +
                        lg_cr_area_mn_hec + 
                        lag_lg_agric_gdp_usd_bn_cy + 
                        lg_credit_dis_rs_mn +
                        lg_tech_proxy,
                        data = data_tsibble
    )

summary(six_vars_log_model) 

# Calculating VIF
vif_values <- vif(six_vars_log_model)
vif_values
```

### 8 Vars Model

```{r}
eight_vars_model <- lm(
    nit_vol_k_ton ~ nit_price_per_ton + 
                    water_maf + 
                    cr_area_mn_hec +
                    lag_agric_gdp_usd_bn_cy +
                    credit_dis_rs_mn +
                    tech_proxy +
                    inp_out_ratio +
                    n_p_ratio,
                    data = data_tsibble
        )

summary(eight_vars_model)

# Calculating VIF
vif_values <- vif(eight_vars_model)
vif_values
```

### 8 Vars Log Model

```{r}
eight_vars_log_model <- lm(
    lg_nit_vol_k_ton ~ lg_nit_price_per_ton + 
                        lg_water_maf +
                        lg_cr_area_mn_hec + 
                        lag_lg_agric_gdp_usd_bn_cy + 
                        lg_credit_dis_rs_mn +
                        lg_tech_proxy +
                        lg_inp_out_ratio,
                        data = data_tsibble
    )

summary(eight_vars_log_model)

# Calculating VIF
vif_values <- vif(eight_vars_log_model)
vif_values    
```
